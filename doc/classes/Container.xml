<?xml version="1.0" encoding="UTF-8" ?>
<class name="Container" inherits="Control" version="3.4">
	<brief_description>
		Base node for containers.
	</brief_description>
	<description>
		Base node for containers. A [Container] contains other controls and automatically arranges them in a certain way.
		A Control can inherit this to create custom container classes.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="fit_child_in_rect">
			<return type="void" />
			<argument index="0" name="child" type="Control" />
			<argument index="1" name="rect" type="Rect2" />
			<description>
				Fit a child control in a given rect. This is mainly a helper for creating custom container classes.
			</description>
		</method>
		<method name="queue_sort">
			<return type="void" />
			<argument index="0" name="ignore_sort_disabled" type="bool"/>
			<description>
				Queue resort of the contained children. This is called automatically anyway, but can be called upon request. If [code]sort_disabled[/code] is [code]true[/code], the resort will not be queued unless [code]ignore_sort_disabled[/code] is also [code]true[/code].
			</description>
		</method>
	</methods>
	<members>
		<member name="sort_disabled" type="bool" setter="set_sort_disabled" getter"is_sort_disabled" default="false">
			If [code]true[/code], the container will not manipulate the position, scale, or size of its children.
		</member>
	</members>
	<signals>
		<signal name="sort_children">
			<description>
				Emitted when sorting the children is needed, regardless of whether [code]sort_disabled[/code] is set to true.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="NOTIFICATION_SORT_CHILDREN" value="50">
			Notification for when sorting the children, it must be obeyed immediately.
		</constant>
	</constants>
</class>
